#! bin/python
import sys
import sh

if len(sys.argv) >= 2:
    newbranch = sys.argv[1]
else:
    print('Usage: script/newfeature FEATURENAME', file=sys.stderr)
    exit(1)

# Crappy check for modified files.
if sh.git.status('-s').strip():
    response = input('Uncommitted changes will be lost. Continue any? (y/N) ')
    if not (response.startswith('y') or response.startswith('Y')):
        exit(0)

sh.git.fetch('upstream')
sh.git.checkout('master')
sh.git.reset('--hard')
sh.git.checkout('-b', newbranch, 'upstream/master')

print('New feature branch created: {}'.format(newbranch))
print('Make changes using `git add` and `git commit`.')
print('When your feature is ready, run the following commands:')
print('    git push origin {}'.format(newbranch))
print('    script/pullrequest {}'.format(newbranch))
